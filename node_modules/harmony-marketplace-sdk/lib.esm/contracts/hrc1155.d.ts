import { Transaction } from '@harmony-js/transaction';
import BN from 'bn.js';
import { BNish, ITransactionOptions } from '../interfaces';
import { BaseToken } from './baseToken';
export declare class HRC1155 extends BaseToken {
    balanceOf(address: string, id: BNish, txOptions?: ITransactionOptions): Promise<BN>;
    balanceOfBatch(accounts: string[], ids: BNish[], txOptions?: ITransactionOptions): Promise<BN[]>;
    safeTransferFrom(from: string, to: string, id: BNish, amount: BNish, data: any, txOptions?: ITransactionOptions): Promise<Transaction>;
    safeBatchTransferFrom(from: string, to: string, ids: BNish[], amounts: BNish[], data: any, txOptions?: ITransactionOptions): Promise<Transaction>;
    setApprovalForAll(addressOperator: string, approved: boolean, txOptions?: ITransactionOptions): Promise<Transaction>;
    isApprovedForAll(owner: string, operator: string, txOptions?: ITransactionOptions): Promise<boolean>;
    owner(txOptions?: ITransactionOptions): Promise<string>;
    tokenURIPrefix(txOptions?: ITransactionOptions): Promise<string>;
    contractURI(txOptions?: ITransactionOptions): Promise<string>;
    totalSupply(id: BNish, txOptions?: ITransactionOptions): Promise<BN>;
    tokenURI(tokenId: BNish, txOptions?: ITransactionOptions): Promise<string>;
    symbol(txOptions?: ITransactionOptions): Promise<string>;
    name(txOptions?: ITransactionOptions): Promise<string>;
    mint(account: string, tokenId: BNish, amount: BNish, txOptions?: ITransactionOptions): Promise<Transaction>;
    mintBatch(account: string, tokenIds: BNish[], amounts: BNish[], txOptions?: ITransactionOptions): Promise<Transaction>;
}
//# sourceMappingURL=hrc1155.d.ts.map