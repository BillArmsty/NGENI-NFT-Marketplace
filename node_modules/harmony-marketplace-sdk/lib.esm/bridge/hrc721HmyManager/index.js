var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { BaseContract } from '../../contracts';
import ABI from './abi';
export class HRC721HmyManager extends BaseContract {
    constructor(address, provider, options) {
        super(address, ABI, provider, options);
    }
    lockNFT721Token(ethTokenAddr, tokenId, recipient, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('lockNFT721Token', [ethTokenAddr, tokenId, recipient], txOptions);
        });
    }
    lockNFT1155Token(ethTokenAddr, tokenId, recipient, amount, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('lockNFT1155Token', [ethTokenAddr, tokenId, recipient, amount, []], txOptions);
        });
    }
    lockTokens(ethTokenAddr, tokenIds, recipient, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('lockTokens', [ethTokenAddr, tokenIds, recipient], txOptions);
        });
    }
    lockNFT1155Tokens(ethTokenAddr, tokenIds, recipient, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('lockNFT1155Tokens', [ethTokenAddr, tokenIds, recipient], txOptions);
        });
    }
    unlockToken(ethTokenAddr, tokenId, recipient, receiptId, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('unlockToken', [ethTokenAddr, tokenId, recipient, receiptId], txOptions);
        });
    }
    unlockNFT1155Token(ethTokenAddr, tokenId, recipient, receiptId, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('unlockNFT1155Token', [ethTokenAddr, tokenId, recipient, receiptId], txOptions);
        });
    }
    unlockTokens(ethTokenAddr, tokenIds, recipient, receiptId, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('unlockTokens', [ethTokenAddr, tokenIds, recipient, receiptId], txOptions);
        });
    }
    unlockNFT1155Tokens(ethTokenAddr, tokenIds, recipient, receiptId, txOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.send('unlockNFT1155Tokens', [ethTokenAddr, tokenIds, recipient, receiptId], txOptions);
        });
    }
}
//# sourceMappingURL=index.js.map