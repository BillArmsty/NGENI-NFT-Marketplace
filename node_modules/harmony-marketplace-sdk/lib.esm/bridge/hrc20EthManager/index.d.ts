import { Signer } from '@ethersproject/abstract-signer';
import { BigNumberish } from '@ethersproject/bignumber';
import { CallOverrides } from '@ethersproject/contracts';
import { TransactionReceipt } from '@ethersproject/providers';
import { EthBaseContract } from '../../contracts';
export declare class HRC20EthManager extends EthBaseContract {
    constructor(address: string, signer: Signer);
    addToken(tokenManager: string, hmyTokenAddr: string, name: string, symbol: string, decimals: BigNumberish, txOptions?: CallOverrides): Promise<TransactionReceipt>;
    removeToken(tokenManager: string, hmyTokenAddr: string, txOptions?: CallOverrides): Promise<TransactionReceipt>;
    burnToken(ethToken: string, amount: BigNumberish, recipient: string, txOptions?: CallOverrides): Promise<TransactionReceipt>;
    mintToken(ethToken: string, amount: BigNumberish, recipient: string, receiptId: string, txOptions?: CallOverrides): Promise<TransactionReceipt>;
    mappings(hrc20Addr: string): Promise<string>;
}
//# sourceMappingURL=index.d.ts.map