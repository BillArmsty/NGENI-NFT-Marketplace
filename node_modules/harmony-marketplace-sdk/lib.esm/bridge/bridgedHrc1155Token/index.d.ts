import { Signer } from '@ethersproject/abstract-signer';
import { BigNumberish, BigNumber } from '@ethersproject/bignumber';
import { CallOverrides } from '@ethersproject/contracts';
import { TransactionReceipt } from '@ethersproject/providers';
import { EthBaseContract } from '../../contracts';
export declare class BridgedHRC1155Token extends EthBaseContract {
    constructor(address: string, signer: Signer);
    balanceOf(address: string, id: BigNumberish): Promise<BigNumber>;
    balanceOfBatch(accounts: string[], ids: BigNumberish[]): Promise<BigNumber[]>;
    safeTransferFrom(from: string, to: string, id: BigNumberish, amount: BigNumberish, data: any, txOptions?: CallOverrides): Promise<TransactionReceipt>;
    safeBatchTransferFrom(from: string, to: string, ids: BigNumberish[], amounts: BigNumberish[], data: any, txOptions?: CallOverrides): Promise<TransactionReceipt>;
    setApprovalForAll(addressOperator: string, approved: boolean, txOptions?: CallOverrides): Promise<TransactionReceipt>;
    isApprovedForAll(owner: string, operator: string): Promise<boolean>;
    owner(): Promise<string>;
    tokenURIPrefix(): Promise<string>;
    contractURI(): Promise<string>;
    totalSupply(id: BigNumberish): Promise<BigNumber>;
}
//# sourceMappingURL=index.d.ts.map