"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.HRC721 = void 0;
var constants_1 = require("../constants");
var Utils = __importStar(require("../utils"));
var baseContract_1 = require("./baseContract");
var baseToken_1 = require("./baseToken");
var HRC721 = (function (_super) {
    __extends(HRC721, _super);
    function HRC721() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HRC721.prototype.balanceOf = function (address, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getBalance(address, undefined, txOptions)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    HRC721.prototype.ownerOf = function (tokenId, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var address;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!Utils.isBNish(tokenId)) {
                            throw new baseContract_1.ContractError('You must provide a tokenId', 'ownerOf');
                        }
                        return [4, this.call('ownerOf', [tokenId], txOptions)];
                    case 1:
                        address = _a.sent();
                        return [2, this.sanitizeAddress(address)];
                }
            });
        });
    };
    HRC721.prototype.safeTransferFrom = function (from, to, tokenId, data, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var args;
            return __generator(this, function (_a) {
                args = [from, to, tokenId];
                if (data) {
                    args.push(data);
                }
                return [2, this.send('safeTransferFrom', args, txOptions)];
            });
        });
    };
    HRC721.prototype.transferFrom = function (from, to, tokenId, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.send('transferFrom', [from, to, tokenId], txOptions)];
            });
        });
    };
    HRC721.prototype.approve = function (to, tokenId, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.send('approve', [to, tokenId], txOptions)];
            });
        });
    };
    HRC721.prototype.getApproved = function (tokenId, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var address;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!Utils.isBNish(tokenId)) {
                            throw new baseContract_1.ContractError('You must provide a tokenId', 'getApproved');
                        }
                        return [4, this.call('getApproved', [tokenId], txOptions)];
                    case 1:
                        address = _a.sent();
                        return [2, this.sanitizeAddress(address)];
                }
            });
        });
    };
    HRC721.prototype.setApprovalForAll = function (addressOperator, approved, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (!addressOperator) {
                    throw new Error('You must provide an addressOperator');
                }
                return [2, this.send('setApprovalForAll', [addressOperator, approved], txOptions)];
            });
        });
    };
    HRC721.prototype.isApprovedForAll = function (owner, operator, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (!owner || owner === constants_1.AddressZero) {
                    throw new baseContract_1.ContractError('Invalid owner provided', 'isApprovedForAll');
                }
                if (!operator || operator === constants_1.AddressZero) {
                    throw new baseContract_1.ContractError('Invalid operator provided', 'isApprovedForAll');
                }
                return [2, this.call('isApprovedForAll', [owner, operator], txOptions)];
            });
        });
    };
    HRC721.prototype.totalSupply = function (txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.call('totalSupply', [], txOptions)];
            });
        });
    };
    HRC721.prototype.tokenURI = function (tokenId, txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (!Utils.isBNish(tokenId)) {
                    throw new baseContract_1.ContractError('You must provide a tokenId', 'tokenURI');
                }
                return [2, this.call('tokenURI', [tokenId], txOptions)];
            });
        });
    };
    HRC721.prototype.symbol = function (txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.call('symbol', [], txOptions)];
            });
        });
    };
    HRC721.prototype.name = function (txOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.call('name', [], txOptions)];
            });
        });
    };
    HRC721.prototype.mint = function (account, tokenId, txOptions) {
        return this.send('mint', [account, tokenId], txOptions);
    };
    HRC721.prototype.safeMint = function (to, tokenId, txOptions) {
        return this.send('safeMint', [to, tokenId], txOptions);
    };
    HRC721.prototype.burn = function (tokenId, txOptions) {
        return this.send('burn', [tokenId], txOptions);
    };
    return HRC721;
}(baseToken_1.BaseToken));
exports.HRC721 = HRC721;
//# sourceMappingURL=hrc721.js.map