import { ContractOptions } from '@harmony-js/contract/dist/utils/options';
import { Transaction } from '@harmony-js/transaction';
import { BaseContract } from '../../contracts';
import { BNish, ContractProviderType, ITransactionOptions } from '../../interfaces';
export declare class HRC721HmyManager extends BaseContract {
    constructor(address: string, provider: ContractProviderType, options?: ContractOptions);
    lockNFT721Token(ethTokenAddr: string, tokenId: BNish, recipient: string, txOptions?: ITransactionOptions): Promise<Transaction>;
    lockNFT1155Token(ethTokenAddr: string, tokenId: BNish, recipient: string, amount: BNish, txOptions?: ITransactionOptions): Promise<Transaction>;
    lockTokens(ethTokenAddr: string, tokenIds: BNish[], recipient: string, txOptions?: ITransactionOptions): Promise<Transaction>;
    lockNFT1155Tokens(ethTokenAddr: string, tokenIds: BNish[], recipient: string, txOptions?: ITransactionOptions): Promise<Transaction>;
    unlockToken(ethTokenAddr: string, tokenId: BNish, recipient: string, receiptId: string, txOptions?: ITransactionOptions): Promise<Transaction>;
    unlockNFT1155Token(ethTokenAddr: string, tokenId: BNish, recipient: string, receiptId: string, txOptions?: ITransactionOptions): Promise<Transaction>;
    unlockTokens(ethTokenAddr: string, tokenIds: BNish[], recipient: string, receiptId: string, txOptions?: ITransactionOptions): Promise<Transaction>;
    unlockNFT1155Tokens(ethTokenAddr: string, tokenIds: BNish[], recipient: string, receiptId: string, txOptions?: ITransactionOptions): Promise<Transaction>;
}
//# sourceMappingURL=index.d.ts.map