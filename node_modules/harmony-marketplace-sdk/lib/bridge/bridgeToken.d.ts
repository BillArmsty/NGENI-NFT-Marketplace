import { Signer } from '@ethersproject/abstract-signer';
import { Wallet } from '@harmony-js/account';
import { BridgeType, NetworkInfo } from '../constants';
import { HRC1155, HRC20, HRC721 } from '../contracts';
import { ITransactionOptions, HRC20Info, HRC1155Info, HRC721Info, BridgeResponse } from '../interfaces';
export declare abstract class BridgeToken {
    readonly isMainnet: boolean;
    protected readonly ethMasterWallet: Signer;
    protected readonly hmyMasterWallet: Wallet;
    protected readonly ethOwnerWallet: Signer;
    protected readonly hmyOwnerWallet: Wallet;
    protected readonly network: NetworkInfo;
    constructor(hmyOwnerWallet: Wallet, ethOwnerWallet: Signer, network?: NetworkInfo);
    abstract ethToHmy(sender: string, recipient: string, token: HRC20 | HRC721 | HRC1155, tokenInfo: HRC20Info | HRC721Info | HRC1155Info): Promise<BridgeResponse>;
    abstract hmyToEth(sender: string, recipient: string, token: HRC20 | HRC721 | HRC1155, tokenInfo: HRC20Info | HRC721Info | HRC1155Info, txOptions: ITransactionOptions): Promise<BridgeResponse>;
    sendToken(type: BridgeType, sender: string, recipient: string, token: HRC20 | HRC721 | HRC1155, tokenInfo: HRC20Info | HRC721Info | HRC1155Info, txOptions?: ITransactionOptions): Promise<BridgeResponse>;
}
//# sourceMappingURL=bridgeToken.d.ts.map