{"ast":null,"code":"var _jsxFileName = \"/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/src/App.js\";\n\n/*import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport logo from '../logo.png';\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Marketplace.networks[networkId]\n    if(networkData) {\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address)\n      this.setState({ marketplace })\n      const productCount = await marketplace.methods.productCount().call()\n      this.setState({ productCount })\n      // Load products\n      for (var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call()\n        this.setState({\n          products: [...this.state.products, product]\n        })\n      }\n      this.setState({ loading: false})\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    }\n\n    this.createProduct = this.createProduct.bind(this)\n    this.purchaseProduct = this.purchaseProduct.bind(this)\n  }\n\n  createProduct(name, price) {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.createProduct(name, price).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  purchaseProduct(id, price) {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.purchaseProduct(id).send({ from: this.state.account, value: price })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main\n                  products={this.state.products}\n                  createProduct={this.createProduct}\n                  purchaseProduct={this.purchaseProduct} />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n*/\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport Marketplace from './components/Marketplace';\nimport Profile from './components/Profile';\nimport SellNFT from './components/SellNFT';\nimport NFTPage from './components/NFTpage';\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    element: React.createElement(Marketplace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/nftPage\",\n    element: React.createElement(NFTPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/profile\",\n    element: React.createElement(Profile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sellNFT\",\n    element: React.createElement(SellNFT, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/src/App.js"],"names":["Navbar","Marketplace","Profile","SellNFT","NFTPage","ReactDOM","BrowserRouter","Routes","Route","App"],"mappingsmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SACEC,aADF,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;AAMA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,OAAO,EAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADJ,CADF;AAUD;;AAED,eAAeA,GAAf","sourcesContent":["/*import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport logo from '../logo.png';\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Marketplace.networks[networkId]\n    if(networkData) {\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address)\n      this.setState({ marketplace })\n      const productCount = await marketplace.methods.productCount().call()\n      this.setState({ productCount })\n      // Load products\n      for (var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call()\n        this.setState({\n          products: [...this.state.products, product]\n        })\n      }\n      this.setState({ loading: false})\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    }\n\n    this.createProduct = this.createProduct.bind(this)\n    this.purchaseProduct = this.purchaseProduct.bind(this)\n  }\n\n  createProduct(name, price) {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.createProduct(name, price).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  purchaseProduct(id, price) {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.purchaseProduct(id).send({ from: this.state.account, value: price })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main\n                  products={this.state.products}\n                  createProduct={this.createProduct}\n                  purchaseProduct={this.purchaseProduct} />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n*/\n\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport Marketplace from './components/Marketplace';\nimport Profile from './components/Profile';\nimport SellNFT from './components/SellNFT';\nimport NFTPage from './components/NFTpage';\nimport ReactDOM from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Marketplace />}/>\n          <Route path=\"/nftPage\" element={<NFTPage />}/>        \n          <Route path=\"/profile\" element={<Profile />}/>\n          <Route path=\"/sellNFT\" element={<SellNFT />}/>             \n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}