{"ast":null,"code":"import _regeneratorRuntime from \"/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/src/components/SellNFT.js\";\nimport React, { Component } from 'react';\nimport Navbar from \"./Navbar\";\nimport { useState } from \"react\";\nimport { uploadFileToIPFS, uploadJSONToIPFS } from \"../pinata\";\nimport Marketplace from '../Marketplace.json';\nimport { useLocation } from \"react-router\";\nexport default function SellNFT() {\n  var _useState = useState({\n    name: '',\n    description: '',\n    price: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formParams = _useState2[0],\n      updateFormParams = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fileURL = _useState4[0],\n      setFileURL = _useState4[1];\n\n  var ethers = require(\"ethers\");\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      updateMessage = _useState6[1];\n\n  var location = useLocation();\n\n  function OnChangeFile(_x) {\n    return _OnChangeFile.apply(this, arguments);\n  }\n\n  function _OnChangeFile() {\n    _OnChangeFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var file, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              file = e.target.files[0];\n              _context.prev = 1;\n              _context.next = 4;\n              return uploadFileToIPFS(file);\n\n            case 4:\n              response = _context.sent;\n\n              if (response.success === true) {\n                console.log(\"Uploaded image to Pinata:\", response.pinataURL);\n                setFileURL(response.pinataURL);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"Error during file upload\", _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    return _OnChangeFile.apply(this, arguments);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"flex flex-col place-items-center mt-10\",\n    id: \"nftForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-4 pb-8 mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center font-bold text-purple-500 mb-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Upload your NFT to the marketplace\"), React.createElement(\"div\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block text-purple-500 text-sm font-bold mb-2\",\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"NFT Name\"), React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Axie#4563\",\n    onChange: function onChange(e) {\n      return updateFormParams(_objectSpread({}, formParams, {\n        name: e.target.value\n      }));\n    },\n    value: formParams.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mb-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block text-purple-500 text-sm font-bold mb-2\",\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"NFT Description\"), React.createElement(\"textarea\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    cols: \"40\",\n    rows: \"5\",\n    id: \"description\",\n    type: \"text\",\n    placeholder: \"Axie Infinity Collection\",\n    value: formParams.description,\n    onChange: function onChange(e) {\n      return updateFormParams(_objectSpread({}, formParams, {\n        description: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mb-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block text-purple-500 text-sm font-bold mb-2\",\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Price (in ONE)\"), React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    type: \"number\",\n    placeholder: \"Min 0.01 ETH\",\n    step: \"0.01\",\n    value: formParams.price,\n    onChange: function onChange(e) {\n      return updateFormParams(_objectSpread({}, formParams, {\n        price: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block text-purple-500 text-sm font-bold mb-2\",\n    htmlFor: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Upload Image\"), React.createElement(\"input\", {\n    type: \"file\",\n    onChange: OnChangeFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-green text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, message), React.createElement(\"button\", {\n    onClick: ListNFT,\n    className: \"font-bold mt-10 w-full bg-purple-500 text-white rounded p-2 shadow-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"List NFT\"))));\n}","map":{"version":3,"sources":["/home/armsty/Coding Projects/Harmony-Hackathon-Projects/NFT-Marketplace/src/components/SellNFT.js"],"names":["React","Component","Navbar","useState","uploadFileToIPFS","uploadJSONToIPFS","Marketplace","useLocation","SellNFT","name","description","price","formParams","updateFormParams","fileURL","setFileURL","ethers","require","message","updateMessage","location","OnChangeFile","e","file","target","files","response","success","console","log","pinataURL","value","ListNFT"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport Navbar from \"./Navbar\";\nimport { useState } from \"react\";\nimport { uploadFileToIPFS, uploadJSONToIPFS } from \"../pinata\";\nimport Marketplace from '../Marketplace.json';\nimport { useLocation } from \"react-router\";\n\nexport default function SellNFT () {\n    const [formParams, updateFormParams] = useState({ name: '', description: '', price: ''});\n    const [fileURL, setFileURL] = useState(null);\n    const ethers = require(\"ethers\");\n    const [message, updateMessage] = useState('');\n    const location = useLocation();\n     \n    async function OnChangeFile(e) {\n        var file = e.target.files[0];\n\n        try {\n            const response = await uploadFileToIPFS(file);\n            if(response.success === true){\n                console.log(\"Uploaded image to Pinata:\", response.pinataURL)\n                setFileURL(response.pinataURL);\n            }\n        } catch(e) {\n            console.log(\"Error during file upload\", e)\n\n        }\n    }\n    return (\n        <div className=\"\">\n        <Navbar></Navbar>\n        <div className=\"flex flex-col place-items-center mt-10\" id=\"nftForm\">\n            <form className=\"bg-white shadow-md rounded px-8 pt-4 pb-8 mb-4\">\n            <h3 className=\"text-center font-bold text-purple-500 mb-8\">Upload your NFT to the marketplace</h3>\n                <div className=\"mb-4\">\n                    <label className=\"block text-purple-500 text-sm font-bold mb-2\" htmlFor=\"name\">NFT Name</label>\n                    <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"Axie#4563\" onChange={e => updateFormParams({...formParams, name: e.target.value})} value={formParams.name}></input>\n                </div>\n                <div className=\"mb-6\">\n                    <label className=\"block text-purple-500 text-sm font-bold mb-2\" htmlFor=\"description\">NFT Description</label>\n                    <textarea className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" cols=\"40\" rows=\"5\" id=\"description\" type=\"text\" placeholder=\"Axie Infinity Collection\" value={formParams.description} onChange={e => updateFormParams({...formParams, description: e.target.value})}></textarea>\n                </div>\n                <div className=\"mb-6\">\n                    <label className=\"block text-purple-500 text-sm font-bold mb-2\" htmlFor=\"price\">Price (in ONE)</label>\n                    <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" type=\"number\" placeholder=\"Min 0.01 ETH\" step=\"0.01\" value={formParams.price} onChange={e => updateFormParams({...formParams, price: e.target.value})}></input>\n                </div>\n                <div>\n                    <label className=\"block text-purple-500 text-sm font-bold mb-2\" htmlFor=\"image\">Upload Image</label>\n                    <input type={\"file\"} onChange={OnChangeFile}></input>\n                </div>\n                <br></br>\n                <div className=\"text-green text-center\">{message}</div>\n                <button onClick={ListNFT} className=\"font-bold mt-10 w-full bg-purple-500 text-white rounded p-2 shadow-lg\">\n                    List NFT\n                </button>\n            </form>\n        </div>\n        </div>\n    )\n}\n  \n  "]},"metadata":{},"sourceType":"module"}